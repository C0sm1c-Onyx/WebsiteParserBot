import os
import pandas as pd
from aiogram import F, Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from telegram_bot.keyboards import main_kb
from telegram_bot.states import Form
from telegram_bot.bot import bot
from parsing.url_parsers import website_parsing_by_xpath
from parsing.database import save_data_on_db


router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        '''–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–∞—Ä—Å–∏–Ω–≥—É —Å–∞–π—Ç–æ–≤. üìä‚ú®\n\n–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∏–∑–≤–ª–µ–∫–∞—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à Excel —Ñ–∞–π–ª —Å–æ —Å—Ç–æ–ª–±—Ü–∞–º–∏ title, url, xpath, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å—Ä–µ–¥–Ω–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–π—Å–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–∞–π—Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –≤ —Ñ–∞–π–ª–µ.\n\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! üöÄ''',
        reply_markup=main_kb
    )


@router.message(F.text == '–ó–∞–≥—Ä—É–∑–∏—Ç—å exel —Ñ–∞–π–ª')
async def wait_for_file(message: Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∞—à Excel —Ñ–∞–π–ª.")
    await state.set_state(Form.waiting_for_file)


@router.message(Form.waiting_for_file)
async def parse_file(message: Message):
    file_id = message.document.file_id
    file = await bot.get_file(file_id)

    file_path = os.path.join(
        os.path.dirname(os.path.abspath(os.path.dirname(__file__))),
        "data/exel_files",
        message.document.file_name
    )

    await bot.download_file(file.file_path, file_path)
    await message.answer("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ü—Ä–æ–∏–∑–≤–æ–∂—É –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞.")

    data = pd.read_excel(file_path)
    df = pd.DataFrame(data, columns=['title', 'url', 'xpath'])

    total_cost, i, answer_text = 0, 1, ""
    for title, url, xpath in zip(df["title"], df["url"], df["xpath"]):
        parsed_data = await website_parsing_by_xpath(url, xpath)

        total_cost += float(parsed_data) if parsed_data else 0

        if parsed_data is None:
            parsed_data = '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ü–µ–Ω—É'

        answer_text += f'{i}. –ù–∞–∑–≤–∞–Ω–∏–µ - {title}\n–°—Å—ã–ª–∫–∞ - {url}\nXPATH - {xpath}\n–¶–µ–Ω–∞ - {parsed_data}\n\n'
        i += 1

        await save_data_on_db(title, url, xpath, parsed_data)

    await message.answer(
        f"{answer_text}–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: {round(total_cost/i, 2)}"
    )
